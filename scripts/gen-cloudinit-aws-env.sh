#!/usr/bin/env bash

# Generate a cloudinit file  for AWS_ACCOUNT
# to form policy documents, resource names etc, with the aws account number as part of a string.

# AWS account number - getting it from an existing user resource

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
TF_STATE=${BUILD}terraform.tfstate
AWS_ACCOUNT=$(aws --profile coreos-cluster iam get-user --user-name=coreos-cluster | jq ".User.Arn" | grep -Eo '[[:digit:]]{12}')
DEPLOYMENT_ID=$(terraform output -state=${TF_STATE} deployment_user_id)
DEPLOYMENT_SEC=$(terraform output -state=${TF_STATE} deployment_user_secret)
DEPLOYMENT_USER=$(terraform output -state=${TF_STATE} deployment_user_name)
REGION=$($DIR/read_cfg.sh $HOME/.aws/config "profile coreos-cluster" region)

cat << EOF
  # generated by scripts/gen-cloudinit-aws-env.sh
  # .aws/envvars is for docker envvars
  # .aws/config is for awscli
  - path: /etc/aws/account.envvars
    content: |
        AWS_ACCOUNT=${AWS_ACCOUNT}
  - path: /root/.aws/envvars
    content: |
        AWS_ACCOUNT=${AWS_ACCOUNT}
        AWS_USER=${DEPLOYMENT_USER}
        AWS_ACCESS_KEY_ID=${DEPLOYMENT_ID}
        AWS_SECRET_ACCESS_KEY=${DEPLOYMENT_SEC}
        AWS_DEFAULT_REGION=${REGION}
  - path: /root/.aws/config
    content: |
        [default]
        aws_access_key_id=${DEPLOYMENT_ID}
        aws_secret_access_key=${DEPLOYMENT_SEC}
        region=${REGION}
  - path: /home/core/.aws/envvars
    content: |
        AWS_ACCOUNT=${AWS_ACCOUNT}
        AWS_USER=${DEPLOYMENT_USER}
        AWS_ACCESS_KEY_ID=${DEPLOYMENT_ID}
        AWS_SECRET_ACCESS_KEY=${DEPLOYMENT_SEC}
        AWS_DEFAULT_REGION=${REGION}
  - path: /home/core/.aws/config
    content: |
        [default]
        aws_access_key_id=${DEPLOYMENT_ID}
        aws_secret_access_key=${DEPLOYMENT_SEC}
        region=${REGION}
EOF
